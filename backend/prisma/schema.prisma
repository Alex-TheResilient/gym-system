generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id        String   @id @default(cuid())
  dni       String   @unique
  firstName String
  lastName  String
  email     String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  memberships Membership[]
  attendances Attendance[]

  @@map("members")
}

model Membership {
  id        String         @id @default(cuid())
  memberId  String
  type      MembershipType
  startDate DateTime
  endDate   DateTime
  price     Float
  isActive  Boolean        @default(true)
  createdAt DateTime       @default(now())

  member Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@index([memberId, isActive])
  @@index([endDate])
  @@map("memberships")
}

model DayPass {
  id    String   @id @default(cuid())
  name  String
  dni   String
  price Float
  date  DateTime @default(now())

  attendances Attendance[]

  @@index([dni, date])
  @@index([date])
  @@map("day_passes")
}

model Attendance {
  id        String   @id @default(cuid())
  memberId  String?
  dayPassId String?
  timestamp DateTime @default(now())

  member  Member?  @relation(fields: [memberId], references: [id])
  dayPass DayPass? @relation(fields: [dayPassId], references: [id])

  @@index([memberId, timestamp])
  @@index([dayPassId, timestamp])
  @@index([timestamp])
  @@map("attendances")
}

enum MembershipType {
  THREE_MONTHS
  SIX_MONTHS
  TWELVE_MONTHS
}
